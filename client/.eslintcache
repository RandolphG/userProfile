[{"C:\\Users\\rando\\Desktop\\_default\\client\\src\\index.tsx":"1","C:\\Users\\rando\\Desktop\\_default\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\rando\\Desktop\\_default\\client\\src\\App.tsx":"3","C:\\Users\\rando\\Desktop\\_default\\client\\src\\store\\index.ts":"4","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\AppRouter.tsx":"5","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Login.tsx":"6","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Signup.tsx":"7","C:\\Users\\rando\\Desktop\\_default\\client\\src\\reducers\\index.ts":"8","C:\\Users\\rando\\Desktop\\_default\\client\\src\\reducers\\exchange.reducer.ts":"9","C:\\Users\\rando\\Desktop\\_default\\client\\src\\hooks\\index.ts":"10","C:\\Users\\rando\\Desktop\\_default\\client\\src\\hooks\\useLocalStorage.ts":"11","C:\\Users\\rando\\Desktop\\_default\\client\\src\\actions\\index.ts":"12","C:\\Users\\rando\\Desktop\\_default\\client\\src\\motionSettings\\motionSettings.js":"13","C:\\Users\\rando\\Desktop\\_default\\client\\src\\motionSettings\\index.js":"14","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\Profile.tsx":"15","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\ProfileInfo.tsx":"16","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\Dashboard.tsx":"17","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\DashboardInfo.tsx":"18","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\index.tsx":"19","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\index.tsx":"20"},{"size":637,"mtime":1614895845010,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1614895845013,"results":"23","hashOfConfig":"22"},{"size":223,"mtime":1615819907898,"results":"24","hashOfConfig":"22"},{"size":259,"mtime":1614895845013,"results":"25","hashOfConfig":"22"},{"size":901,"mtime":1616385760615,"results":"26","hashOfConfig":"22"},{"size":5490,"mtime":1616382890023,"results":"27","hashOfConfig":"22"},{"size":5307,"mtime":1616386012109,"results":"28","hashOfConfig":"22"},{"size":203,"mtime":1615824912005,"results":"29","hashOfConfig":"22"},{"size":833,"mtime":1614895845012,"results":"30","hashOfConfig":"22"},{"size":64,"mtime":1615829808162,"results":"31","hashOfConfig":"22"},{"size":2556,"mtime":1615829770782,"results":"32","hashOfConfig":"22"},{"size":758,"mtime":1614895845004,"results":"33","hashOfConfig":"22"},{"size":1544,"mtime":1616384435680,"results":"34","hashOfConfig":"22"},{"size":34,"mtime":1615935993719,"results":"35","hashOfConfig":"22"},{"size":2938,"mtime":1616382783934,"results":"36","hashOfConfig":"22"},{"size":11298,"mtime":1616382083875,"results":"37","hashOfConfig":"22"},{"size":2940,"mtime":1616383514920,"results":"38","hashOfConfig":"22"},{"size":11295,"mtime":1616383514829,"results":"39","hashOfConfig":"22"},{"size":48,"mtime":1616381888741,"results":"40","hashOfConfig":"22"},{"size":52,"mtime":1616383546604,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"12phz7n",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\rando\\Desktop\\_default\\client\\src\\index.tsx",[],["87","88"],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\App.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\store\\index.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\AppRouter.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Login.tsx",["89","90","91","92"],"import { motion } from \"framer-motion\";\nimport React, { memo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { signUpMotionSettings, slideOut } from \"../motionSettings\";\nimport { useLocalStorage } from \"../hooks\";\n\nconst Login: React.FC = memo(() => {\n  let history = useHistory();\n  const [inputType, setInputType] = useState(\"password\");\n  const [user, setUser] = useLocalStorage(\"user\", {});\n  const [token, setToken] = useLocalStorage(\"token\", \"\");\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [loginCredentials, setLoginCredentials] = useState({\n    user: user === \"null\" ? null : user,\n    token,\n    open: false,\n  });\n\n  function handleLogin(\n    token: string,\n    user: { _id: string; username: string },\n    cb: () => void\n  ): void {\n    setUser(user);\n    setToken(token);\n    cb();\n  }\n\n  async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    console.log(`credentials`, credentials);\n    /* base64 encoded string */\n    const token = await fetch(\"http://localhost:4001/api/users/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(credentials),\n    })\n      .then((response) => response.json())\n      .then((data) => data.token);\n\n    /* accessing the second element which is data*/\n    const base64 = token.split(\".\")[1];\n    const payload = JSON.parse(atob(base64));\n    handleLogin(token, { _id: payload._id, username: payload.username }, () =>\n      history.push(\"/dashboard\")\n    );\n  }\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function showPassword() {\n    setInputType(inputType === \"text\" ? \"password\" : \"text\");\n  }\n\n  const GoogleSignUpButton = () => (\n    <button className=\"button__google-sign-in\">Sign in with Google</button>\n  );\n\n  const AlternativeButton = () => (\n    <button className=\"button__alternative-options\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-labelledby=\"mk9s29m6gr78unextthl39u2a8vxp8r\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        className=\"button__alternative-options__icon\"\n      >\n        <title id=\"mk9s29m6gr78unextthl39u2a8vxp8r\">Twitter icon</title>\n        <path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\" />\n      </svg>\n    </button>\n  );\n\n  const CreateAccountButton = () => (\n    <button className=\"button__create_account\" type=\"submit\">\n      Sign in\n    </button>\n  );\n\n  return (\n    <motion.div {...signUpMotionSettings} className=\"login\" key=\"login\">\n      <div className=\"border\">\n        <motion.h3 {...slideOut} className=\"login-label\">\n          Login to _default\n        </motion.h3>\n        <div className=\"alternative-sign-in\">\n          <GoogleSignUpButton />\n          <AlternativeButton />\n        </div>\n        <hr className=\"border__divider\" />\n        <form className=\"form\" onSubmit={(e) => handleSubmit(e)}>\n          <div className=\"input-group\">\n            <input\n              className=\"input-group__input\"\n              onChange={handleChange}\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"&nbsp;\"\n              autoComplete=\"off\"\n              required\n            />\n            <label className=\"input-group__label\">Username</label>\n          </div>\n          <div className=\"input-group\">\n            <input\n              className=\"input-group__input\"\n              onChange={handleChange}\n              type={inputType}\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"&nbsp;\"\n              required\n            />\n            <label className=\"input-group__label\">Password</label>\n            <span className=\"input-group__password_show\" onClick={showPassword}>\n              {inputType === \"text\" ? \"Hide\" : \"show\"}\n            </span>\n          </div>\n          <div className=\"login-options\">\n            <label className=\"label\">\n              <input className=\"remember-me\" type=\"checkbox\" /> Remember Me\n            </label>\n          </div>\n          <CreateAccountButton />\n          <div className=\"alternate-section\">\n            <motion.p\n              className=\"alternate-section__forget-password\"\n              {...slideOut}\n            >\n              <a href=\"#\">Forgot Password?</a>\n            </motion.p>\n            <motion.p className=\"alternate-section__signup\" {...slideOut}>\n              <a\n                onClick={() => {\n                  history.push(\"/signup\");\n                }}\n                href=\"#\"\n              >\n                Sign up\n              </a>\n            </motion.p>\n          </div>\n        </form>\n      </div>\n    </motion.div>\n  );\n});\n\nexport default Login;\n","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Signup.tsx",["93","94","95","96"],"import { motion } from \"framer-motion\";\nimport React, { memo, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { signUpMotionSettings, slideOut } from \"../motionSettings\";\n\nconst Signup: React.FC = memo(() => {\n  let history = useHistory();\n  const [inputType, setInputType] = useState(\"password\");\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    fetch(\"http://localhost:4001/api/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then((response) => response.json())\n      .then((data) => data.user);\n  }\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function showPassword() {\n    setInputType(inputType === \"text\" ? \"password\" : \"text\");\n  }\n\n  const Terms = () => (\n    <div className=\"terms\">\n      <label className=\"terms__label\">\n        <input className=\"terms__description\" type=\"checkbox\" /> Creating an\n        account means you’re okay with our\n        <a href=\"#\">Terms of Service, Privacy Policy</a>, and our default{\" \"}\n        <a href=\"#\">Notification Settings</a>.\n      </label>\n    </div>\n  );\n\n  const GoogleSignUpButton = () => (\n    <button className=\"button__google-sign-in\">Sign up with Google</button>\n  );\n\n  const AlternativeButton = () => (\n    <button className=\"button__alternative-options\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-labelledby=\"mk9s29m6gr78unextthl39u2a8vxp8r\"\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        className=\"button__alternative-options__icon\"\n      >\n        <title id=\"mk9s29m6gr78unextthl39u2a8vxp8r\">Twitter icon</title>\n        <path d=\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\" />\n      </svg>\n    </button>\n  );\n\n  const CreateAccountButton = () => (\n    <button className=\"button__create_account\" type=\"submit\">\n      Create Account\n    </button>\n  );\n\n  const SignOut = () => (\n    <div className=\"account-sign-in\">\n      <label className=\"account-sign-in__text\">\n        Already have an account? <Link to=\"/\">Sign in</Link>\n      </label>\n    </div>\n  );\n\n  const SignIn = () => (\n    <div className=\"account-sign-in\">\n      <label className=\"account-sign-in__text\">\n        Already have an account?{\" \"}\n        <a\n          onClick={() => {\n            history.push(\"/\");\n          }}\n          href=\"#\"\n        >\n          Sign in\n        </a>\n      </label>\n    </div>\n  );\n\n  return (\n    <motion.div {...signUpMotionSettings} className=\"login\" key=\"signup\">\n      <div className=\"border\">\n        <motion.h3 {...slideOut} className=\"login-label\">\n          Sign up to _default\n        </motion.h3>\n        <div className=\"alternative-sign-in\">\n          <GoogleSignUpButton />\n          <AlternativeButton />\n        </div>\n        <hr className=\"border__divider\" />\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <div className=\"input-group\">\n            <input\n              className=\"input-group__input\"\n              onChange={handleChange}\n              value={credentials.username}\n              type=\"text\"\n              name=\"username\"\n              id=\"username\"\n              placeholder=\"&nbsp;\"\n              autoComplete=\"off\"\n              required\n            />\n            <label className=\"input-group__label\">Username</label>\n          </div>\n          <div className=\"input-group\">\n            <input\n              onChange={handleChange}\n              className=\"input-group__input\"\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"&nbsp;\"\n              required\n            />\n            <label className=\"input-group__label\">Email</label>\n          </div>\n          <div className=\"input-group\">\n            <input\n              className=\"input-group__input\"\n              onChange={handleChange}\n              value={credentials.password}\n              type={inputType}\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"&nbsp;\"\n              required\n            />\n            <label className=\"input-group__label\">Password</label>\n            <span className=\"input-group__password_show\" onClick={showPassword}>\n              {inputType === \"text\" ? \"Hide\" : \"show\"}\n            </span>\n          </div>\n          <Terms />\n          <CreateAccountButton />\n          <SignIn />\n        </form>\n      </div>\n    </motion.div>\n  );\n});\n\nexport default Signup;\n","C:\\Users\\rando\\Desktop\\_default\\client\\src\\reducers\\index.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\reducers\\exchange.reducer.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\hooks\\index.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\hooks\\useLocalStorage.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\actions\\index.ts",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\motionSettings\\motionSettings.js",[],["97","98"],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\motionSettings\\index.js",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\Profile.tsx",["99"],"import React, { memo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { profile, modal } from \"../../motionSettings\";\nimport ProfileInfo from \"./ProfileInfo\";\n\nconst Profile: React.FC = memo(() => {\n  const history = useHistory();\n\n  const Games = () => {\n    return (\n      <div className=\"games\">\n        <span className=\"games__title\">Games (3)</span>\n        <div className=\"games__container\">\n          <div className=\"games__container__game\">Tetris</div>\n          <div className=\"games__container__game\">Typing</div>\n          <div className=\"games__container__game\">Around</div>\n        </div>\n      </div>\n    );\n  };\n\n  const Badges = () => {\n    return (\n      <div className=\"badges\">\n        <span className=\"badges__title\">Badges (3)</span>\n        <div className=\"badges__container\">\n          <div className=\"badges__container__game\">Fast</div>\n          <div className=\"badges__container__game\">Kills</div>\n          <div className=\"badges__container__game\">Perfect</div>\n        </div>\n      </div>\n    );\n  };\n\n  const Stats = () => {\n    return (\n      <div className=\"stats\">\n        <div className=\"stats__container\">\n          <div className=\"stats__container__wins\">WINS #77</div>\n          <div className=\"stats__container__ties\">TIES #21</div>\n          <div className=\"stats__container__loses\">LOSES #77</div>\n        </div>\n      </div>\n    );\n  };\n\n  const ModalBackButtonSvg = () => (\n    <svg\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      role=\"presentation\"\n      focusable=\"false\"\n      tabIndex={-1}\n      className=\"icon-back\"\n    >\n      <path\n        d=\"M0 12.782c0 .85.1 1.65.3 2.45.1.45.35.45.5 0 1.05-2.65 2.75-5.15 5.55-5.65H8v2.2c0 1 .6 1.3 1.3.7l6.4-5.5c.35-.3.35-.8 0-1.15L9.3.332c-.7-.65-1.3-.3-1.3.65v2.35c-4.8.8-8 4.7-8 9.45z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n\n  const ModalNavigation = () => (\n    <div className=\"modal__container__nav\">\n      <button\n        className=\"modal__container__nav__button\"\n        onClick={() => {\n          history.push(\"/dashboard\");\n        }}\n      >\n        <ModalBackButtonSvg /> Dashboard\n      </button>\n      <span />\n    </div>\n  );\n\n  const Rank = () => (\n    <div className=\"rank\">\n      <div className=\"rank__text\">#99</div>\n      <div className=\"rank__number\">Rank</div>\n    </div>\n  );\n\n  return (\n    <motion.div\n      key=\"profile\"\n      className=\"dashboard\"\n      {...profile}\n      initial=\"initial\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      <div className=\"dashboard__options\">\n        <span className=\"modal\">\n          <div className=\"modal__container\">\n            <ModalNavigation />\n            <ProfileInfo />\n            <Rank />\n            <Badges />\n            <Games />\n            <Stats />\n          </div>\n        </span>\n      </div>\n    </motion.div>\n  );\n});\n\nexport default Profile;\n","C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\ProfileInfo.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\Dashboard.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\DashboardInfo.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Profile\\index.tsx",[],"C:\\Users\\rando\\Desktop\\_default\\client\\src\\components\\Dashboard\\index.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":18,"column":10,"nodeType":"106","messageId":"107","endLine":18,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":18,"column":28,"nodeType":"106","messageId":"107","endLine":18,"endColumn":47},{"ruleId":"109","severity":1,"message":"110","line":142,"column":15,"nodeType":"111","endLine":142,"endColumn":27},{"ruleId":"109","severity":1,"message":"110","line":145,"column":15,"nodeType":"111","endLine":150,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":45,"column":9,"nodeType":"111","endLine":45,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":46,"column":9,"nodeType":"111","endLine":46,"endColumn":21},{"ruleId":"104","severity":1,"message":"112","line":76,"column":9,"nodeType":"106","messageId":"107","endLine":76,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":88,"column":9,"nodeType":"111","endLine":93,"endColumn":10},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"113","line":4,"column":19,"nodeType":"106","messageId":"107","endLine":4,"endColumn":24},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'loginCredentials' is assigned a value but never used.","Identifier","unusedVar","'setLoginCredentials' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SignOut' is assigned a value but never used.","'modal' is defined but never used.","no-global-assign","no-unsafe-negation"]